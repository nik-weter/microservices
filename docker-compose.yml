---
version: '3.3'
services:
  post_db:
    image: mongo:${MONGO_VERSION}
    deploy:
      placement:
        constraints:
          - node.labels.reliability == high
    volumes:
      - post_db:/data/db
    networks:
      back_net:
        aliases:
          - post_db
          - comment_db 

  ui:
          # build: ./ui
    image: ${USERNAME}/ui
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
        delay: 3s
      resources:
        limits:
          cpus: '0.50'
          memory: 150M
      update_config:
        delay: 5s
        parallelism: 1
        failure_action: pause
      mode: replicated
      replicas: 3
      placement:
        constraints:
          - node.role == worker
    ports:
      - ${UI_HOST_PORT}:${UI_CONTAINER_PORT}/tcp
    networks:
      - front_net

  post: 
  # build: ./post-py 
    image: ${USERNAME}/post
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 15
        delay: 1s
      resources:
        limits:
          cpus: '0.30'
          memory: 300M
      update_config:
        delay: 10s
        parallelism: 2
        failure_action: rollback
      mode: replicated
      replicas: 3
      placement:
        constraints:
          - node.role == worker
    networks: 
      - front_net
      - back_net 

  comment: 
  #build: ./comment
    image: ${USERNAME}/comment
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 10
        delay: 1s
      resources:
        limits:
          cpus: '0.30'
          memory: 300M
      update_config: 
        delay: 10s
        parallelism: 2
        failure_action: rollback
      mode: replicated
      replicas: 3
      placement:
        constraints:
          - node.role == worker
    networks: 
      - front_net
      - back_net 
    
volumes: 
  post_db:


networks: 
  back_net:
  front_net:
